1.“a”和‘a’是不同的，前者是‘a’+‘\0’
2.char的取值范围是-128-127
3.定义常量的方式为 const float PI=3.14，必须在生命的时候赋值，然后无法更改。
4.C++的赋值过程是从右往左的，整个表达式的值为最左变量的值。
	例如：a=5+（c=6） a=11 c=6 表达式的值为11
5.x*=y+3     -》 x=x*（y+3）
6.逗号运算符，从左至右开始求解，最右端为表达式的值。cout<<(a=5,a*6);输出30
7.a>b?a:b
8.sizeof()可以求取括号类对象所占字节数，sizeof("123")输出的结果是4。
9.enum 枚举值
	声明enum weekday{Sun,Mon,Tue,Wed,Thu,Fri,Sat};
10.函数中的值传递和引用传递，值传递的形式参数是实际参数的副本，具有不同地址，而引用传递则是传递实参的引用给形参，使得形参的改变会引起实参的改变。一个变量引用实际上是该变量的另一个别名。
int b=3;
int &a=b
void exchange(int &a,int &b);
11.&x、*x和x的区别
首先，当&出现在等号左边的时候，它代表引用。int &a=b；//a是b的引用。
而出现在等号右边的时候，它代表地址，比如int *a=&b；//a是b的地址。
这时候，假如有int *a=&b；
a则是b的地址，*a则是地址a所指向的值也就是b，而&a则是a的地址，也就是b地址的地址。
于是，还可以推断出 *a出现在等号的左变代表的是地址的定义
12.内联函数实际上是代码替换，在编译时将函数体嵌入到每一个调用处，而普通的函数则认为是控制转移。
内联函数可以减少系统开销，提高代码执行效率。
inline void ex(int a,int b)
{
	int c=a;
	a=b;
	b=c;
} 
等同于
{
	int a=x;//模拟形式参数
	int b=y;//模拟形式参数
	int c=a;
	a=b;
	b=c;
}所以它并不能够起到引用传递的效果。
13.c++支持带默认形参的函数，例如int fun(int a=5,int b=6);使用的时候可以是fun();fun(4);fun(3,5);
但是在java中废除了，因为这样会容易使得编译器和函数重载搞混。
而在C++中，如果出现以上情况，会出现这样的提示：
[Error] call of overloaded 'fun()' is ambiguous。着实是有趣。
14.常用的C++系统函数
sqrt()求平方根的
abs()求绝对值的//fabs()求浮点数的绝对值。
rand()求随机数的//使用的时候可以加上srand(int x)设置随机数种子。(同一个随机数种子可以得出不同的值，但是同一个随机种子在同一个系统中得出的值在每一次运行程序时都是一样的。)
15.在C++中，类内函数可以写在类的内部也可以写在类的外部，如果写在内部，则将被认定为是内联函数，写在外面则是普通函数。
sin(30)\cos(60)\tan(45)
16.->和.之间的区别。
->用在地址的后面，例如this->name。
.用在实例化对象的后面，例如 Student stu;stu.name。
如果Student *stuX=&stu，那stuX->name=stu.name=*stuX.name;
17.如果一个类只有无参构造函数，只需要这样子定义它的对象。Student sut；无需在后面加括号，更不存在new。
18.如果一个类具有内嵌对象成员，那各个内嵌对象成员将会先于它被创建。而删除的时候，则顺序相反，析构函数由里到外被之行。
19.结构体和类的区别，结构体默认的成员属性是public，而C++中类的默认成员属性是private。保留struct主要是为了兼容C语言，因为C语言只有结构体没有类。
20.
void function()
{
    static int a=0;//不断调用，a会不断递加。
    a++；
}
静态局部变量：具有全局寿命，但局部可见，只有第一次进入函数时被初始化。
private：
   static int num；
静态数据成员：在一个类中只有一个副本，由每一个类对象共同维护。
static void function();
User::function();
静态成员函数：可以通过类名或者对象来调用。
21