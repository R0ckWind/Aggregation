1、ip地址配置
	<1> 访问/etc/sysconfig/network-scripts目录下的ifcfg配置文件
	<2> 使用vi命令编辑文件
		按i进入编辑模式，修改其中的
		ONBOOT=yes //操作系统启动时，在系统引导过程中，是否激活此接口
		BOOTPROTO=static　　//将ip分配模式修改为静态模式（原本为dhcp）
		设置以下项
		IPADDR=192.168.203.3
		NETMASK=255.255.255.0
		GATEWAY=192.168.203.2
		DNS1=192.168.203.2 
	<3> 输入:wq保存并退出
	<4> 使用service network restart命令重启网卡
	<5> 输入ip addr查看ip配置
	<6> 使用ping www.baidu.com查看是否连通
2、ifconfig not found
保证有网的情况下，使用以下命令：
	yum install net-tools

3、Linux的部分特性：
	<1> linux严格区分大小写
	<2> linux所有内容都以文件表示，包括硬件
	<3> linux不依靠扩展名区分执行文件的文件类型(没有.txt这些后缀)，但为了让使用者便于使用，约定俗成的在部分文件后会添加后缀。
	<4> /与/root、/swap通常属于不同分区
	
4、各级目录的作用
	/bin/:存放系统命令的目录，普通用户和超级用户都可以执行。
	/sbin/:存放着和系统设置相关的命令，只有超级用户可以进行设置，部分命令可以被普通用户查看。
	/usr/bin/:存放系统命令的目录，与bin的区别是，usr/bin下的目录单用户模式下不可执行。
	/usr/sbin/:存放根目录下不必要的系统管理命令，多半只有超级用户可以执行。
	#如果这是用户和管理员必备的二进制文件，就会放在/bin。如果这是系统管理员必备，但是一般用户根本不会用到的二进制文件，就会放在 /sbin。相对而言。如果不是用户必备的二进制文件，多半会放在/usr/bin；如果不是系统管理员必备的工具，多半会放在/usr/sbin。
	/boot/:系统启动目录，保存系统启动相关的文件。
	/dev/:保存设备文件的目录，硬件相关。
	/etc/:配置文件保存位置，系统默认安装位置。
	/home/:普通用户的宿主目录。假如有一个普通用户名为rock，那其宿主目录为/home/rock
	/lib/:系统调用的函数库保存位置。
	/lost+find/:当系统意外崩溃或断电时，产生的文件碎片将存放在此处。fsck工具会检查这里来修复损坏的文件系统。每一个分区都会含有一个lost+find目录。
	/media/:挂载目录。一般用来挂载软盘或光盘。
	/mnt/:挂载目录，一般用来挂载U盘、移动硬盘或其他操作系统的分区。
	/misc/：挂载目录，一般用来挂载NFS服务的共享目录。
	/opt/:第三方安装的软件保存位置。现在更倾向与把外来软件放置在/usr/local/目录下
	/proc/:虚拟文件系统，不保存在硬盘中，而是保存在内存中，断电将丢失数据。主要存放系统的内核、进程、外部设备状态和网络状态等。
	/sys/:与proc类似，主要是保存内核相关信息的。
	/root/:为超级用户的宿主目录。
	/srv/:保存系统服务所需的数据。
	/tmp/:临时目录，系统存放临时文件的目录，不建议在次保存重要数据，因为系统每次开机都将把此目录清空。
	/usr/:不是user的缩写，而是Unix Software Resource的缩写。是存放系统软件资源的目录。
	/var/：动态数据保存位置。主要保存缓存、日志以及软件运行所产生的文件。
	
5、常用命令
	格式：命令 [-选项] 参数
	-a 等于 --all
	-lh 等于 -l -h
6、ls命令	
	作用：列出目前工作目录所含之文件及子目录)
	范例：
		ls 【显示当前路径下的直接子文件和子目录名称】
		ls /root 【显示root目录下的直接子文件和子目录名称】
	选项：
		-a(all) 【显示所有文件包括隐藏文件】 #隐藏文件即.开头的文件
		-l(long) 【显示文件的详细信息】
			内容包括：
				<1>文件类型及权限:
					它有10个字符组成，其中第一个字符代表文件类型。常见的有三种，分别是：
						- 【文件】 d 【目录】 l 【软链接】
					剩余的九个字符每三个为一组，分别为对u(user)、g(group)、o(other)的权限
					权限类型又包含r(读)、w(写)、x(执行)三种。
					例如-rw-r--r--的意思是，这是个文件，所有者可以对它进行读写操作、所有组以及其他人则只能对它进行读操作。
				<2>引用计数
				<3>所有者：文件的创建者，只能有一个，可以转让，拥有u权限。
				<4>所属组：里面有多个用户，拥有g权限
				<5>文件大小：以字节为单位
				<6>文件最后修改时间
				<7>文件名
		-h 【将文件大小的单位换算成最大匹配单位】 配合-l使用
		-d 【仅显示当前目录路径的文件信息】 比如ls -ld /root 就是仅显示root目录的文件详细信息。-d一般需配合-l使用
		-i 【除了显示文件名以外还显示文件的i节点(inode)】
	参数：
		无参数:显示当前路径下的子文件信息
		路径参数:显示指定路径下的子文件信息
		https://www.bilibili.com/video/BV1nW411v7Ed/?p=13&t=888
7、cd(change directory)
	作用：切换到指定目录
	范例：
		cd /root
		cd .. 【返回上一级目录】
8、pwd(print working directory)
	作用：显示当前目录的全路径
	范例：
		pwd 【无需任何参数】
9、mkdir(make directory)
	作用：创建目录并指定目录名称
	范例：
		mkdir /tmp/newD
	选项：
		-p 【递归创建目录】在无该选项时，如果上一级目录未被创建，命令将会执行失败，加上该命令即可实现递归创建。
	参数：
		单个参数 【要创建的目录的名称。】
		多个参数 【创建多个目录】 比如：mkdir /tmp/newD1 /tmp/newD2
10、rmdir(remove empty directory)
	作用：删除空目录，但无法删除非空目录
	范例：
		rmdir /tmp/newD1 【删除newD1这个空目录】
11.cp(copy)
	作用：将指定文件或目录复制到指定路径，新文件的最后修改时间为复制命令执行的时间
	语法：
		cp [原文件路径] [目标路径]
		cp [原文件路径1] [原文件路径2] [目标路径] 复制多文件
	选项：
		-r 【复制目录】目录需要加-r，文件可以直接复制
		-p 【保持文件属性】最后修改时间保留为旧文件的时间
	范例：
		cp -r /tmp/d1/dd /tmp/d2 【将d1文件下的dd文件复制到d2目录下】
		cp -r /tmp/d1/dd /tmp/d2/ddnew 【将d1文件下的dd文件复制到d2目录下,并重命名为ddnew】该命令的前提是d2目录存在而ddnew目录不存在
		
12.mv(move)
	作用：将指定文件或目录剪切到指定路径，文件和目录皆可，无需额外参数，不会改变文件属性。
	语法：
		mv [原文件路径] [目标路径]
		mv [原文件路径1] [原文件路径2] [目标路径] 剪切多文件
	范例：
		mv /tmp/d1 /tmp/d2 【将d1目录移动到d2目录下】
		mv /tmp/d1 /tmp/d3 【将d1目录重新命名为d3】前提是d3目录不存在
13.rm(remove)
	作用：删除文件或目录
	语法
		rm [文件路径]
	选项
		-f 【不再询问，直接删除】否则会询问是否确认删除
		-r 【删除目录】如果不加f，它会一个个子目录或子文件询问你是否需要删除
14、touch
	作用：创建空文件
	范例：
		touch rock wind 【在当前路径下创建rock和wind两个空文件】
		touch "rock wind" 【在当前路径下创建名为rock wind的空文件（不推荐）】
		touch /tmp/rockWind 【在tmp目录下创建rockWind文件】
15、cat
	作用：显示文件内容，只能作用于文件
	语法
		cat [文件路径]
		-n 【显示行号】
	范例：
		cat /etc/issue 【浏览linux欢迎文件】
	缺点：当文本量大的时候无法只有的浏览内容
16、tac
	作用：将文件内容按行倒序显示，其他与cat相同。
	缺点：无法用-n显示行号
17、more
	作用：将文件内容分页显示
	范例：
		more /etc/services
	相关操作：
		f或空格	 【往下翻页】
		enter键	 【往下滚动一行】
		q键		 【退出命令】
	缺点：无法往上翻页，错过了就要重新开始
18、less
	作用：将文件内容分页显示，但是可以往上翻页也可以往下翻页
	范例：
		less /etc/services
	相关操作：
		
		f或空格	 【往下翻页】
		enter键	 【往下滚动一行】
		q键		 【退出命令】	
		可以使用↑箭头和↓箭头进行上下滚动
		可以使用PgUp和PgDn进行上下翻页
		在less命令模式下，输入 【/+关键词】可以进行关键词搜索，关键词将高亮显示。
		在搜索过程中，按n可以切换到下一个命中位置。
	缺点：没有进度百分比显示	
19、head
	作用：显示文件的前面几行
	范例：
		head -n 10 /etc/services 【显示services文件的前面10行】
	#如果不输入-n，默认显示前10行
	
20、tail
	作用：显示文件的末尾几行
	额外参数：
		-f 【动态显示文件末尾内容（如果文件更新输出会发生实时变动）】
21、ln(link)
	作用：生成链接文件
	语法：
		ln [文件路径] [链接文件路径]
	选项：
		-s  【创建软链接文件】否则为硬连接
	软链接和硬链接文件：
		软链接文件： 【类似于windows系统下的快捷方式】
			1、文件标识为以l开头。
			2、文件体积小，它仅代表符号链接。
			3、使用 ls -l 命令查看文件时，会出现->符号指向源文件。
			4、如果源文件删除，无法使用。
			5、软链接文件的i节点与源文件不同。
		硬链接文件： 【相当于引用】
			1、文件标识为以-开头。
			2、源文件与硬链接文件总是保持着一致，包括文件属性以及文件内容。无论哪一方被修改，另一方总会同步变更。
			3、如果源文件删除，硬链接文件依然存在并可以继续使用。
			4、目录无法生成硬链接文件。
			5、硬链接文件的i节点与源文件不同。内核通过i节点进行同步修改。
			6、硬链接文件不能跨分区使用。
		#如何区分软链接文件以及硬链接文件
			软链接可以通过ls -l查看文件标识辨别。
			硬连接可以通过ls -i查看文件i节点进行辨别。
22、chmod(change the permissions mode of a file)
	作用：改变文件或目录的权限，只能是超级用户或者文件所有者能够使用。
	语法：
		chmod {u|g|o|a}{+|-|=}{r|w|x} [文件目录]
		chmod {0-7}{0-7}{0-7} [文件目录]
	参数：
		-R 【修改此目录的同时递归修改目录的所有子目录与子文件】
	范例：
		#test文件的初始权限为-rw-r--r--
		chmod u+x test 【给user添加x权限】-》-rwxr--r--
		chmod u+x,g=rw,o-r 【给user添加x权限，g权限设置为rw，收回o的r权限】-》-rwxrw----
		#r对应4，w对应2，x对应1
		chmod 744 test 【给ugo授权】-》-rwxr--r--
		chmod 760 test 【给ugo授权】-》-rwxrw----
	补充：
		RWX权限的理解》
				|			文件			目录			|
				|	R	可以浏览文件	可以列出目录内容	|
				|		(cat、more等)		(ls)			|
				|											|
				|	W	可以编辑文件	可以创建、删除目录	|
				|		(vi、vim等)		中的文件(mkdir、rm)	|
				|											|				
				|	X	可以执行文件	可以进入这个目录	|
				|							(cd)			|
		
		也就是说，只要你拥有当前目录的w权限，你就可以删除该目录的所有文件以及直接子目录。但假如子目录下还有孙目录，且你没有子目录的w权限，你将无法删除孙目录。也就无法删除该子目录。
23、chown(change file ownership)
	作用：改变文件或目录的所有者，只能由管理员来执行
	语法：chown [用户名] [文件或目录]
	范例：
		useradd rock 【添加rock用户】
		chown rock test 【把test文件的所有者设置为rock】
24、chgrp(change file group ownership)
	作用：改变文件或目录的所属组
	语法：chown [用户组] [文件或目录]
	范例：
		group rockwind 【添加rockwind组】
		chgrp rockwind test 【把test文件的所数组设置为rockwind】	
	补充：
		谁创建了文件，谁就是文件的所有者。
		一个用户可以存在于多个组中，但只有一个缺省组。所以文件的所属组以创建者的缺省组。
25、unmask(the user file-creation mask)
	作用：显示、设置文件的缺省权限。
	范例：
		unmask -S 【显示当前的缺省权限】rwxr-xr-x
		unmask  【显示当前的缺省权限的掩码】0022
		unmask 023  【将缺省权限更改为rwxr-xr--】023=777-真正权限码
	补充：
		如果使用mkdir和touch分别创建一个目录和一个文件，会发现两者的权限不同。
		各个角色相差了一个x。那是因为，考虑到安全性问题，linux在创建文件的时候不允许出现可执行权限。
		所以会把x自动抹去。
26、find
	作用：搜索文件或目录
	语法：
		find [搜索范围] [匹配条件]
	常见选项：
		-name 【按照文件名称搜索】
			精准查询：find /etc -name init 【在etc目录下找到名字为init的文件或目录】
			模糊查询：find /etc -name *init* 【在etc目录下找到名字包含init的文件或目录】
				*：任意多个字符
				?：任意一个字符	，比如init??? 【init开头，且后面有且只有三个任意字符的文件或目录】
		-iname 【按照文件名称搜索且不区分大小写】、
		-size 【根据文件大小查找】
			+n 大于  -n 小于 n 等于
			单位：数据块
				1 数据块= 512 字节 =0.5 K
			举例：find / -size +100  【在根目录下查找大于50k的文件】
		-user 【根据所有者查找】
			举例：find /home -user rock
		-group 【根据所属组查找】
		-type 【根据文件类型查找】
			f 文件  d 目录  l 软链接文件
			举例：find /etc -type f
		-inum 【根据i节点查找】
			ls -i /etc 【查看i节点】
			
		
		根据修改时间查找：
		-amin 【根据访问时间修改时间查找】
		-cmin 【根据文件属性修改时间查找】
		-mmin 【根据文件内容修改时间查找】
		举例：find /etc/ -cmin -5  【查找5分钟以内，文件属性被修改的文件】
		
		条件连接选项：
		-a 【and，并且】find /etc -size +1080 -a -size -2080
		-o 【or，或者】 find /etc -name happy -o -name sad
		 
		 -exec/-ok +命令 【对查询结果执行相应命令】
		 举例：find /etc -name inittab -exec ls -l{} \;
		  【对etc目录下的inittab执行 ls -l命令】
		 其中，{}代表find查询出来的结果，此处代指inittab这个文件，\;代表结束符号，\为转义字符。
		 -exec和-ok的区别在于，-ok会多一个确认步骤。
27、locate	
	作用：在文件资料库中查找文件
	语法：locate 文件名
			-i 不区分大小写
	补充：文件资料库存放在/var/lib/mlocate目录下，目录会定期更新。
	缺点：
		1、无法查找到未存放在资料库中的文件。这点可以通过updatedb更新文件资料库
		2、临时文件比如/tmp下的文件不在文件资料库的收入范围内。
28、which
	作用：搜索命令所在目录及别名信息
	语法：which 命令
	补充：系统调用命令时，是通过别名进行调用的，而非根据命令路径进行调用。
	比如执行which ls命令。
	可以得到ls='ls --color=auto'
	其中ls为别名，ls --color=auto为命令的真正含义。
	也就是说，调用ls命令实际上调用的是/bin/ls --color=auto这条命令。
	假如你想要调用最原始的命令，需要添加绝对路径也就是/bin/ls
29、whereis
	作用：搜索命令所在目录以及帮助文档路径。
	语法：whereis 命令
	对比于which，它不会显示别名，但是多了帮助文档路径。
30、grep
	作用：在文件内容中搜索
	语法：grep 匹配字符串 文件路径
	选项：
		-i 【不区分大小写】
		-v 【排除包含指定字符串的行】
			范例：grep -v ^# /etc/inittab 【显示inittab文件中的非注释行】
				其中^#表示行首以#开头的行
31、man(manual)
	作用：获取命令或配置文件的帮助信息
	语法：
		man+命令 【获取命令的帮助信息】
		man+配置文件 【获取配置文件的帮助信息】
	范例：
		man ls 【查看ls以及其所有选项的作用】
		man services 【查看services文件的作用】
	补充：
		1、man的操作类似于less，可以输入 【/+关键词】可以进行关键词搜索。
		2、无论是命令还是配置文件，都不能输入绝对路径。
		3、可能存在命令和配置文件同名的情况。
			帮助文档存放在*/man/路径下。可以通过whereis查看。它下面还分为man1和man5。
			其中：1代表命令的帮助文档	5代表配置文件的帮助文档
			如果一个指令包含了命令帮助文档以及配置文件帮助文档，那会优先查看命令帮助文档。
			例如passwd命令。
			此时可以通过 【man 5 passwd】查看配置文件帮助文档。
32、whatis
	作用：只显示命令的作用。（只从帮助文档中读取name部分的信息）
	语法：
		whatis 命令
	
32、apropos
	作用：只显示配置文件的作用
	
33、--help
	作用：显示命令的常见选项
	举例：
		ls --help
		
34、help
	作用：获得Shell内置命令的帮助信息
	语法：
		help 命令
	有的命令不是linux的命令，而是Shell的内置命令，包括cd、umask等。如果使用man命令，将会得到所有shell的内置命令的帮助信息。也就是说man cd和man umask的结果是一样的。但假如使用help cd或者help umask，就可以获得内置命令的帮助信息。
	
35、info
	作用：类似与man，只是格式有所差别。

36、useradd
	作用：添加用户，默认无密码。
	语法：
		useradd 用户名
37、passwd
	作用：更改用户的密码，只有用户自己或者管理员可以修改
	语法：
		passwd  【修改自己的密码】
		passwd 用户名 【修改指定用户的密码】
	补充：
		linux密码设置规则：
		1.使用数字，小写字母，大写字母，特殊符号中的三种;

    	2.密码长度足够长，大于7位;

    	3.使用随机字符串，不要使用具有特殊意义的字符串，比如你的名字，生日等;

    	4.定期更换密码，一般两个月左右更换密码;

    	5.密码重复的循环周期足够长，比如1月使用123，那么12个月内或者24个月内不会重复使用此密码。

38、who
	作用：显示当前登录用户
	信息包括：
		登录用户名
		登录终端： tty本地终端 pts远程终端
		登录时间
		登录者的IP地址
39、w
	作用：显示更加详细的当前登录用户的信息
	信息包括：
		当前系统时间   系统连续运行时间    用户数    负载均衡指数 
		登录用户名(USER)    登录终端(TTY
		)    ip地址(FROM)  登录时间(LOGING)    累计空闲时间(IDLE)   累计占用CPU时间(JCPU)  当前操作占用的CPU时间(PCPU)   当前执行操作(WHAT)
40、gzip
	作用：以gz格式压缩文件，它只能作用于文件。压缩后文件以.gz为后缀。
	语法：gzip [文件名]
	补充：压缩之后不会保留源文件，这点和windows不同
41、gunzip	
	作用：解压gz格式的压缩文件。
	语法：gunzip [文件名]
	补充：它的效果等同于gzip -d
	
42、tar
	#打包
	作用：将目录打包成文件。(也可以作用于目录)
	语法：tar [-选项] [打包后的文件名] [要打包的目录]
	选项：
		-c  【打包】
		-z  【打包的同时压缩成gz文件】
		-j  【打包的同时压缩成bz2文件】
		-v  【打包的同时显示详细信息】
		-f  【指定文件名，此选项必须要有，而且一定要写在最后一个】
	范例：
		tar -cvf temp.tar temp  【将temp文件打包并显示受作用的文件路径】
		tar -zcvf temp.tar.gz temp  【将temp文件打包并压缩】
	补充：此命令会保留源文件。
	#解包
	作用：将打包的文件解包。
	语法：tar [-选项] [要解包的目录]
	选项：
		-x  【解包】
		-z  【解包的同时解压缩——gz文件】
		-j  【解包的同时解压缩——bz2文件】
		-v  【打包的同时显示详细信息】
		-f  【指定文件名，此选项必须要有，而且一定要写在最后一个】
	补充：
		解包结果将于源文件名相同。
		
43、zip
	作用：压缩文件或目录。.zip是linnux和windows通用的压缩格式
	语法：zip [-r] [打包后的文件名] [要打包的目录]
			-r 可以压缩目录
	优点：可以保留源文件，且支持目录压缩
	范例：zip -r test.zip test
44、unzip
	作用：解压缩文件或目录
	范例：unzip test.zip
	
45、bzip2
	作用：gz的升级版，添加了额外选项-k，添加后可以保留源文件，且对于大文件的压缩比更好。
	选项：
		-k  【保留源文件】
		-d  【解压缩】
	范例：bzip2 -k test  【压缩后文件以.bz2为后缀。】
	补充：它也不可以压缩文件。
46、bunzip2
	作用：解压缩bz2格式的文件。
	范例：bunzip2 test.bz2
	
	
47、write
	作用：给指定在线用户发送消息
	语法：
		write 用户 【执行后进入输入模式】
		输入模式下，可使用ctrl+backspace回退
		使用ctrl+d退出并发送。
48.wall(write all)
	作用:给所有在线用户发送消息，包括自己
	语法：
		wall  【消息】
49、ping
	选项：-c +数字 指定ping的次数。
	范例：ping -c 4 192.168.103.2
50、ifconfig
	语法：
		ifconfig 【查看网络配置】
		ifconfig 网卡名称 IP地址 【暂时性的设置IP地址】
	范例：
		ifconfig eth0 192.168.103.3
		
51、mail
	作用：给指定用户发送邮件
	语法：
		mail 【进入邮箱模式】
		mail 用户名 【发送邮件】
		输入邮件编号 【查看指定邮件】
		d+邮件编号 【删除指定邮件】
		h 【在mail模式下查看邮件列表】
		q 【退出】
52、last
	作用：统计所有用户目前以及过去登录的信息
	同类命令：
		lastlog 【显示用户最后一次登录的信息】
		lastlog -u [用户uid] 【查看指定用户的最后一次登录信息】
53、traceroute
	作用：显示数据包到目标主机的路径
	语法：tranceroute [ip或域名]
54、netstat
	作用：显示网络相关信息
	语法：netstat [选项]
	选项：
		-t 【查询TCP】
		-u 【查询UDP】
		-l 【查询监听】
		-r 【查询路由】
		-n 【显示ip地址和端口号】
	范例；
		netstat -tlun 【查看本机监听的端口】
		netstat -an 【查看本机所有的网络连接】
		netstat -rn 【查看本机路由表】
55、setup
	作用：进入配置网络界面
56、mount
	作用：挂载文件
57、shutdown
	作用：关机或重启
	选项：
		-h [指定时间] 【指定时间后关机】
		-r [指定时间] 【指定时间后重启】
		-c  【取消一个关机命令】
	范例：
		shutdown -h now 【立即关机】
58、其他关机命令：
	<1>halt
	<2>poweroff 【不推荐用】
	<3>init 0
59、其他重启命令：
	<1>reboot
	<2>init 6
60、系统运行级别：
		0、关机
		1、单用户 【启动最少的服务】
		2、不完全多用户，不含NFS服务 【NFS用于Linux网络文件共享】
		3、完全多用户
		4、未分配
		5、图形界面
		6、重启
	通过修改 /etc/inittab 文件的
	id:3:initdefault:
	使用runlevel命令查询当前运行级别
	
	
61、logout
	作用:退出登录
	
62、vi/vim
	语法：vi [文件路径]	【进入命令模式】
	模式切换：
		在命令模式下，输入a/i/o 【进入插入模式】
		在插入模式下按ESC 【回到命令模式】
		在命令模式下，输入:（冒号） 【进入编辑模式】
	命令模式相关操作：
		#进入插入模式
		a 	【在光标所在字符后插入】
		A 	【在光标所在行尾插入】
		i 	【在光标所在字符前插入】
		I 	【在光标所在行行首插入】
		o 	【在光标下插入新行】
		O 	【在光标上插入新行】
		#定位操作
		gg	【到第一行】
		G	【到最后一行】
		nG	【到第n行】
		$	【移到行尾】
		0	【移到行首】
		#删除操作
		X	【删除光标所在处字符】
		nX	【删除光标所在处后n个字符】
		dd	【删除光标所在行】	同剪切
		ndd	【删除光标所在处始n行】	同剪切
		dG	【删除光标所在行到文件末尾内容】
		D	【删除光标所在处到行尾内容】
		#复制和剪切操作
		yy	【复制当前行】
		nyy	【复制当前行以下n行】
		dd	【剪切当前行】
		ndd	【剪切当前行以下n行】
		p	【粘贴到当前光标所在行下】
		P	【粘贴到当前光标所在行上】
		#替换和取消操作
		r	【取消光标所在处字符】	按r 然后输入新的字符(只能1个)
		R	【从光标处开始替换字符，按ESC结束】 可以多个
		u	【撤销上一步操作】
		#搜索和搜索替换
		/string	【搜索指定字符串，区分大小写】 比如/tcp 【搜索tcp这个关键字】
		n		【跳转到下一个匹配位置】
		#保存退出
		ZZ	【快捷键保存并退出】
	编辑模式：
		#定位操作
		:set nu  	【显示行号】
		:set nonu 	【取消显示行号】
		:n			【到第n行】
		#删除操作
		:n1,n2d		【删除指定范围的行】 比如：5,10 d【删除第5到第10行】
		#替换
		:%s/old/new/g	【全文替换指定字符串】
		:n1,n2s/old/new/g	【指定范围内替换】
		#保存退出
		:w	【保存修改】
		:w new_file	【另存为指定文件】
		:wq	【保存并退出】
		:q!	【不保存退出】
		:wq!	【对只读文件保存并退出（只有文件所有者和root可用）】
		
		
	

	
	
	